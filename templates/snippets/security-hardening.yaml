# Security hardening configuration
# Basic security measures for Ubuntu Server

# Security-focused packages
packages:
  # Firewall
  - ufw
  
  # Intrusion prevention
  - fail2ban
  
  # Security auditing
  - aide
  - rkhunter
  - chkrootkit
  
  # AppArmor (usually pre-installed)
  - apparmor
  - apparmor-utils
  
  # Automatic updates
  - unattended-upgrades
  
  # Additional security tools
  - libpam-pwquality  # Password quality requirements
  - apt-listchanges   # Notification of package changes
  - needrestart       # Check for services needing restart

# SSH hardening (in addition to main SSH config)
ssh:
  install-server: true
  allow-pw: false  # Disable password authentication
  # Only allow key-based authentication
  # authorized-keys:
  #   - ssh-rsa ... admin@secure

# Post-installation security commands
late-commands:
  # Enable and configure firewall
  - curtin in-target --target=/target -- ufw --force enable
  - curtin in-target --target=/target -- ufw default deny incoming
  - curtin in-target --target=/target -- ufw default allow outgoing
  - curtin in-target --target=/target -- ufw allow ssh
  - curtin in-target --target=/target -- ufw allow 443/tcp
  - curtin in-target --target=/target -- ufw allow 80/tcp
  
  # Configure fail2ban
  - curtin in-target --target=/target -- systemctl enable fail2ban
  - |
    cat <<EOF > /target/etc/fail2ban/jail.local
    [DEFAULT]
    bantime = 3600
    findtime = 600
    maxretry = 5
    
    [sshd]
    enabled = true
    port = ssh
    logpath = %(sshd_log)s
    backend = systemd
    EOF
  
  # Disable root login
  - curtin in-target --target=/target -- passwd -l root
  - curtin in-target --target=/target -- sed -i 's/^PermitRootLogin.*/PermitRootLogin no/' /etc/ssh/sshd_config
  
  # Configure automatic updates
  - |
    cat <<EOF > /target/etc/apt/apt.conf.d/50unattended-upgrades
    Unattended-Upgrade::Allowed-Origins {
        "\${distro_id}:\${distro_codename}-security";
        "\${distro_id}ESMApps:\${distro_codename}-apps-security";
        "\${distro_id}ESM:\${distro_codename}-infra-security";
    };
    Unattended-Upgrade::AutoFixInterruptedDpkg "true";
    Unattended-Upgrade::MinimalSteps "true";
    Unattended-Upgrade::Remove-Unused-Dependencies "true";
    Unattended-Upgrade::Automatic-Reboot "false";
    Unattended-Upgrade::Automatic-Reboot-Time "02:00";
    EOF
  
  # Set secure kernel parameters
  - |
    cat <<EOF >> /target/etc/sysctl.d/99-security.conf
    # IP Spoofing protection
    net.ipv4.conf.all.rp_filter = 1
    net.ipv4.conf.default.rp_filter = 1
    
    # Ignore ICMP redirects
    net.ipv4.conf.all.accept_redirects = 0
    net.ipv6.conf.all.accept_redirects = 0
    
    # Ignore send redirects
    net.ipv4.conf.all.send_redirects = 0
    
    # Disable source packet routing
    net.ipv4.conf.all.accept_source_route = 0
    net.ipv6.conf.all.accept_source_route = 0
    
    # Log Martians
    net.ipv4.conf.all.log_martians = 1
    
    # Ignore ICMP ping requests
    net.ipv4.icmp_echo_ignore_broadcasts = 1
    
    # Ignore Directed pings
    net.ipv4.icmp_ignore_bogus_error_responses = 1
    
    # Enable TCP/IP SYN cookies
    net.ipv4.tcp_syncookies = 1
    net.ipv4.tcp_max_syn_backlog = 2048
    net.ipv4.tcp_synack_retries = 2
    net.ipv4.tcp_syn_retries = 5
    
    # Disable IPv6 if not needed
    # net.ipv6.conf.all.disable_ipv6 = 1
    # net.ipv6.conf.default.disable_ipv6 = 1
    EOF
  
  # Set restrictive umask
  - curtin in-target --target=/target -- sed -i 's/^UMASK.*/UMASK 027/' /etc/login.defs
  
  # Configure password quality requirements
  - |
    cat <<EOF > /target/etc/security/pwquality.conf
    minlen = 12
    dcredit = -1
    ucredit = -1
    ocredit = -1
    lcredit = -1
    EOF
  
  # Enable AppArmor
  - curtin in-target --target=/target -- systemctl enable apparmor
  
  # Create security audit script
  - |
    cat <<'SCRIPT' > /target/usr/local/bin/security-audit
    #!/bin/bash
    echo "=== Security Audit Report ==="
    echo "Date: $(date)"
    echo ""
    echo "== Failed login attempts =="
    grep "Failed password" /var/log/auth.log | tail -10
    echo ""
    echo "== Current connections =="
    ss -tunap | grep ESTABLISHED
    echo ""
    echo "== Listening services =="
    ss -tunlp
    echo ""
    echo "== Recent sudo usage =="
    grep sudo /var/log/auth.log | tail -10
    SCRIPT
  - curtin in-target --target=/target -- chmod +x /usr/local/bin/security-audit