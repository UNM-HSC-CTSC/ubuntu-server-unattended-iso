---
# Base configuration for all servers

- name: Update apt cache
  apt:
    update_cache: yes
    cache_valid_time: 3600

- name: Install base packages
  apt:
    name:
      - vim
      - git
      - curl
      - wget
      - htop
      - tmux
      - net-tools
      - dnsutils
      - software-properties-common
      - apt-transport-https
      - ca-certificates
      - gnupg
      - lsb-release
      - python3-pip
      - ufw
      - fail2ban
      - unattended-upgrades
    state: present

- name: Configure automatic security updates
  copy:
    dest: /etc/apt/apt.conf.d/50unattended-upgrades
    content: |
      Unattended-Upgrade::Automatic-Reboot "false";
      Unattended-Upgrade::Remove-Unused-Dependencies "true";
      Unattended-Upgrade::Allowed-Origins {
        "${distro_id}:${distro_codename}-security";
      };

- name: Enable UFW firewall
  ufw:
    state: enabled
    policy: deny
    direction: incoming

- name: Allow SSH through firewall
  ufw:
    rule: allow
    port: 22
    proto: tcp

- name: Configure fail2ban
  copy:
    dest: /etc/fail2ban/jail.local
    content: |
      [DEFAULT]
      bantime = 3600
      findtime = 600
      maxretry = 3
      
      [sshd]
      enabled = true
  notify: restart fail2ban

- name: Set timezone
  timezone:
    name: America/New_York

- name: Configure NTP
  apt:
    name: chrony
    state: present

- name: Configure sysctl for performance
  sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    sysctl_set: yes
    state: present
    reload: yes
  loop:
    - { key: "vm.swappiness", value: "10" }
    - { key: "net.ipv4.tcp_keepalive_time", value: "120" }
    - { key: "net.core.default_qdisc", value: "fq" }
    - { key: "net.ipv4.tcp_congestion_control", value: "bbr" }

- name: Create monitoring user
  user:
    name: monitoring
    comment: "Monitoring service account"
    shell: /bin/bash
    system: yes

- name: Install node exporter for Prometheus
  shell: |
    wget https://github.com/prometheus/node_exporter/releases/download/v1.6.1/node_exporter-1.6.1.linux-amd64.tar.gz
    tar xzf node_exporter-1.6.1.linux-amd64.tar.gz
    cp node_exporter-1.6.1.linux-amd64/node_exporter /usr/local/bin/
    rm -rf node_exporter-1.6.1.linux-amd64*
  args:
    creates: /usr/local/bin/node_exporter

- name: Create node exporter systemd service
  copy:
    dest: /etc/systemd/system/node_exporter.service
    content: |
      [Unit]
      Description=Node Exporter
      After=network.target
      
      [Service]
      Type=simple
      User=monitoring
      ExecStart=/usr/local/bin/node_exporter
      
      [Install]
      WantedBy=multi-user.target

- name: Start and enable node exporter
  systemd:
    name: node_exporter
    state: started
    enabled: yes
    daemon_reload: yes

- name: Allow node exporter through firewall
  ufw:
    rule: allow
    port: 9100
    proto: tcp
    src: 10.0.0.0/16  # Only from internal network

# Handlers
- name: restart fail2ban
  service:
    name: fail2ban
    state: restarted