---
# Install GitHub Actions runner dependencies and software

- name: Install required packages
  apt:
    name:
      - curl
      - wget
      - git
      - build-essential
      - libssl-dev
      - libffi-dev
      - python3-dev
      - python3-pip
      - python3-venv
      - docker.io
      - docker-compose
      - jq
      - zip
      - unzip
      - ca-certificates
      - gnupg
      - lsb-release
    state: present
    update_cache: yes

- name: Create runner user
  user:
    name: runner
    comment: "GitHub Actions runner"
    home: /home/runner
    shell: /bin/bash
    groups: docker
    append: yes

- name: Create additional runner users for multi-runner setup
  user:
    name: "runner{{ item }}"
    comment: "GitHub Actions runner {{ item }}"
    home: "/home/runner{{ item }}"
    shell: /bin/bash
    groups: docker
    append: yes
  loop: "{{ range(2, runner_count + 1) | list }}"
  when: runner_count > 1

- name: Create runner directories
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.owner }}"
    mode: '0755'
  loop:
    - { path: /home/runner/actions-runner, owner: runner }
    - { path: /home/runner/work, owner: runner }
    - { path: /var/log/github-runner, owner: runner }
    - { path: /opt/github-runner, owner: root }
    - { path: /opt/github-runner/scripts, owner: root }
    - { path: /opt/github-runner/config, owner: root }

- name: Create directories for additional runners
  file:
    path: "{{ item }}"
    state: directory
    owner: "runner{{ (index // 3) + 2 }}"
    group: "runner{{ (index // 3) + 2 }}"
    mode: '0755'
  loop: "{{ dirs }}"
  vars:
    base_dirs:
      - "/home/runner{}/actions-runner"
      - "/home/runner{}/work"
      - "/var/log/github-runner/runner{}"
    dirs: "{{ base_dirs | map('format', range(2, runner_count + 1) | list) | flatten }}"
  loop_control:
    index_var: index
  when: runner_count > 1

- name: Get latest runner version
  uri:
    url: https://api.github.com/repos/actions/runner/releases/latest
    headers:
      Accept: application/vnd.github.v3+json
  register: runner_release
  retries: 3
  delay: 5

- name: Set runner version fact
  set_fact:
    runner_version: "{{ runner_release.json.tag_name[1:] }}"

- name: Download GitHub Actions runner
  get_url:
    url: "https://github.com/actions/runner/releases/download/v{{ runner_version }}/actions-runner-linux-x64-{{ runner_version }}.tar.gz"
    dest: "/opt/github-runner/actions-runner-{{ runner_version }}.tar.gz"
    mode: '0644'
  register: runner_download

- name: Extract runner for primary runner
  unarchive:
    src: "/opt/github-runner/actions-runner-{{ runner_version }}.tar.gz"
    dest: /home/runner/actions-runner
    owner: runner
    group: runner
    remote_src: yes
    creates: /home/runner/actions-runner/config.sh

- name: Extract runner for additional runners
  unarchive:
    src: "/opt/github-runner/actions-runner-{{ runner_version }}.tar.gz"
    dest: "/home/runner{{ item }}/actions-runner"
    owner: "runner{{ item }}"
    group: "runner{{ item }}"
    remote_src: yes
    creates: "/home/runner{{ item }}/actions-runner/config.sh"
  loop: "{{ range(2, runner_count + 1) | list }}"
  when: runner_count > 1

- name: Install runner dependencies as runner user
  become_user: runner
  shell: |
    cd /home/runner/actions-runner
    ./bin/installdependencies.sh
  args:
    creates: /home/runner/actions-runner/.installed
  register: deps_install

- name: Mark dependencies as installed
  file:
    path: /home/runner/actions-runner/.installed
    state: touch
    owner: runner
    group: runner
  when: deps_install.changed

- name: Install dependencies for additional runners
  become_user: "runner{{ item }}"
  shell: |
    cd /home/runner{{ item }}/actions-runner
    ./bin/installdependencies.sh
    touch .installed
  args:
    creates: "/home/runner{{ item }}/actions-runner/.installed"
  loop: "{{ range(2, runner_count + 1) | list }}"
  when: runner_count > 1

- name: Configure Docker daemon
  copy:
    dest: /etc/docker/daemon.json
    content: |
      {
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "10m",
          "max-file": "3"
        },
        "storage-driver": "overlay2",
        "userland-proxy": false,
        "live-restore": true,
        "default-ulimits": {
          "nofile": {
            "Name": "nofile",
            "Hard": 64000,
            "Soft": 64000
          }
        }
      }
  notify: restart docker

- name: Enable and start Docker
  systemd:
    name: docker
    state: started
    enabled: yes
    daemon_reload: yes