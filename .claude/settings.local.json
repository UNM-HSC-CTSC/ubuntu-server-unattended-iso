{
  "permissions": {
    "allow": [
      "Bash(chmod:*)",
      "Bash(mkdir:*)",
      "Bash(./test.sh:*)",
      "Bash(bash:*)",
      "Bash(dos2unix:*)",
      "Bash(sed:*)",
      "Bash(./run-tests.sh)",
      "Bash(set -x)",
      "Bash(cp:*)",
      "Bash(true)",
      "Bash(echo:*)",
      "Bash(ls:*)",
      "Bash(timeout:*)",
      "Bash(python3:*)",
      "Bash(if [ -e /dev/loop0 ])",
      "Bash(then echo \"Loop devices exist\")",
      "Bash(else echo \"No loop devices\")",
      "Bash(fi)",
      "Bash(git add:*)",
      "Bash(grep:*)",
      "Bash(wget:*)",
      "Bash(curl:*)",
      "Bash(tar:*)",
      "Bash(/tmp/bin/glab:*)",
      "Bash(apt-cache:*)",
      "Bash(find:*)",
      "Bash(dpkg:*)",
      "Bash(NO_COLOR=1 timeout 10 ./test.sh)",
      "Bash(NO_COLOR=1 timeout 5 bash -x ./test.sh)",
      "Bash(export NO_COLOR=1)",
      "Bash(./test-minimal.sh:*)",
      "Bash(od:*)",
      "Bash(rm:*)",
      "Bash(git commit:*)",
      "Bash(glab ci:*)",
      "Bash(./scripts/validate-yaml.sh:*)",
      "Bash(cat:*)",
      "WebFetch(domain:canonical-subiquity.readthedocs-hosted.com)",
      "Bash(./scripts/validate-autoinstall.sh:*)",
      "Bash(./scripts/check-ubuntu-updates.sh:*)",
      "Bash(./build-iso.sh:*)",
      "Bash(./scripts/validate-yaml-syntax.sh:*)",
      "Bash(# Test validation step only\nbash -c ''\nset -e\nsource ./build-iso.sh\nPROFILE=\"\"minimal-server\"\"\nSCRIPT_DIR=\"\".\"\"\nfind_iso_tool\nvalidate_profile\nvalidate_autoinstall\necho \"\"Validation steps completed successfully\"\"\n'')",
      "Bash(apt-get:*)",
      "Bash(apt-get install:*)",
      "Bash(./scripts/test-credential-injection.sh:*)",
      "Bash(# Set up test environment and run\nexport DEFAULT_USERNAME=\"\"testuser\"\"\nexport DEFAULT_USER_PASSWORD=\"\"TestP@ssw0rd123!\"\"\nexport DEFAULT_USER_SSH_KEY=\"\"ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAITest test@example\"\"\nexport ROOT_PASSWORD=\"\"RootP@ssw0rd456!\"\"\n\n# Run the validation directly\ncd /app\nbash -c ''source <(awk ''\"\"''\"\"''/^validate_credentials\\(\\)/ { capture = 1 } /^[[:alpha:]_][[:alnum:]_]*\\(\\)/ && !/^validate_credentials\\(\\)/ { capture = 0 } capture { print }''\"\"''\"\"'' build-iso.sh); \nsource <(awk ''\"\"''\"\"''/^validate_password_complexity\\(\\)/ { capture = 1 } /^[[:alpha:]_][[:alnum:]_]*\\(\\)/ && !/^validate_password_complexity\\(\\)/ { capture = 0 } capture { print }''\"\"''\"\"'' build-iso.sh);\nsource <(awk ''\"\"''\"\"''/^error\\(\\)/ { capture = 1 } /^[[:alpha:]_][[:alnum:]_]*\\(\\)/ && !/^error\\(\\)/ { capture = 0 } capture { print }''\"\"''\"\"'' build-iso.sh);\nvalidate_credentials && echo \"\"Validation passed!\"\"'')",
      "Bash(export DEFAULT_USERNAME=\"testuser\")",
      "Bash(export DEFAULT_USER_PASSWORD=\"TestP@ssw0rd123!\")",
      "Bash(export DEFAULT_USER_SSH_KEY=\"ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAITest test@example\")",
      "Bash(export ROOT_PASSWORD=\"RootP@ssw0rd456!\")",
      "Bash(NO_COLOR=1 ./test.sh)",
      "Bash(./scripts/verify-no-credentials.sh:*)",
      "Bash(# Test that validation catches missing variables\nunset DEFAULT_USERNAME DEFAULT_USER_PASSWORD DEFAULT_USER_SSH_KEY ROOT_PASSWORD\n./build-iso.sh --profile template-secure --skip-validation 2>&1 | grep -E \"\"environment variable.*required\"\" | head -5)",
      "Bash(git push:*)",
      "Bash(/app/scripts/test-credential-injection.sh:*)",
      "Bash(NO_COLOR=1 ./scripts/test-credential-injection.sh)",
      "Bash(NO_COLOR=1 ./scripts/test-credential-validation.sh)",
      "Bash(NO_COLOR=1 /app/scripts/test-credential-validation.sh)",
      "Bash(./scripts/test-validation-only.sh:*)",
      "Bash(./scripts/test-build-validation.sh:*)",
      "Bash(unset:*)",
      "Bash(/app/build-iso.sh:*)",
      "Bash(/tmp/test_env.sh:*)",
      "Bash(NO_COLOR=1 /app/scripts/test-credential-simple.sh)",
      "Bash(./scripts/test-credential-simple.sh:*)",
      "Bash(glab auth:*)",
      "Bash(glab:*)",
      "Bash(GITLAB_HOST=hsc-ctsc-git.health.unm.edu glab ci list -R noops/ubuntu-server-unattended-iso)",
      "Bash(GITLAB_HOST=hsc-ctsc-git.health.unm.edu glab ci view 411 -R noops/ubuntu-server-unattended-iso)",
      "Bash(GITLAB_HOST=hsc-ctsc-git.health.unm.edu glab ci view -R noops/ubuntu-server-unattended-iso)",
      "Bash(GITLAB_HOST=hsc-ctsc-git.health.unm.edu glab ci trace -R noops/ubuntu-server-unattended-iso)",
      "Bash(export GITLAB_HOST=hsc-ctsc-git.health.unm.edu)",
      "Bash(awk:*)",
      "Bash(pip3 install:*)",
      "Bash(ln:*)",
      "Bash(make:*)",
      "Bash(bin/build-iso:*)",
      "Bash(diff:*)",
      "Bash(git rm:*)",
      "Bash(git config:*)",
      "Bash(gh run view:*)",
      "Bash(mv:*)",
      "Bash(touch:*)",
      "Bash(gh run list:*)",
      "Bash(gh run watch:*)",
      "Bash(pip install:*)",
      "WebFetch(domain:code.visualstudio.com)",
      "WebFetch(domain:github.com)",
      "Bash(claude mcp add:*)",
      "Bash(claude mcp:*)"
    ],
    "deny": []
  }
}